<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">3</stringProp>
        <longProp name="ThreadGroup.start_time">1504614332000</longProp>
        <longProp name="ThreadGroup.end_time">1504614332000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="NumCiudades" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Ciudades con nombres diferentes//
Object r = collection.distinct(&quot;city&quot;).size();
result.append(r.toString());
result.append(&quot;\n&quot;);

SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="NumCodigosPostales" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Ciudades con nombres diferentes//
Object r = collection.distinct(&quot;_id&quot;).size();
result.append(r.toString());
result.append(&quot;\n&quot;);

SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="CiudadesConN" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Ciudades que empiezan con N//
DBCursor cursor0 = collection.find(new BasicDBObject(&quot;city&quot;,Pattern.compile(&quot;^N.&quot;)));

while(cursor0.hasNext())
{
	result.append(cursor0.next().get(&quot;city&quot;));
	result.append(&quot;\n&quot;);
}
result.append(&quot;\n&quot;);

SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="MayorCP" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Mayor codigo postal//
Cursor cursor = collection.find();  
cursor.sort(new BasicDBObject(&quot;_id&quot;, -1));
result.append(cursor.next());
result.append(&quot;\n&quot;);

SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="MenorCP" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Menor codigo postal//   
Cursor cursor2 = collection.find();  
cursor2.sort(new BasicDBObject(&quot;_id&quot;, 1));
result.append(cursor2.next());
result.append(&quot;\n&quot;);


SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="CiudadMasLetras" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

DBCursor cursor = collection.find();

String maxCity = cursor.next().get(&quot;city&quot;);
int maxLength = maxCity.length();

while(cursor.hasNext())
{
	String currentCity = cursor.next().get(&quot;city&quot;);
	if(currentCity.length()&gt;maxLength)
	{
		maxLength = currentCity.length();
		maxCity = currentCity;
	}	
}
result.append(maxCity);


SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="CiudadDosPalabras" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import java.util.regex.Pattern;

MongoClient cli = new MongoClient(&quot;localhost&quot;, 27017);
DB db = cli.getDB(&quot;prueba&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

StringBuilder result = new StringBuilder();

//Ciudades con 2 palabras//
DBCursor cursor = collection.find(new BasicDBObject(&quot;city&quot;, Pattern.compile(&quot; &quot;)));

while(cursor.hasNext())
{
	result.append(cursor.next().get(&quot;city&quot;));
	result.append(&quot;\n&quot;);
}

SampleResult.setResponseData(result.toString().getBytes());

</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
